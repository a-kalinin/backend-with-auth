version: "3.9"

# https://habr.com/ru/post/578744/ - used instruction
services:
  # http://localhost:5005/
  node:
    build:
      context: .
      dockerfile: Dockerfile
      target: base-image
    environment:
#      PROTOCOL: 'http'
#      HOST: 'localhost'
      PORT: '5000'
#      TOKEN_ISSUER: 'http://localhost:3003'
      DB_HOST: 'localhost'
      DB_PORT: '6543'
      NODE_ENV: 'development'
    volumes:
      - ./src:/app/src
      - ./nodemon.json:/app/nodemon.json
    container_name: AppBackEnd
    expose:
      - '5000'
    ports:
      - '5005:5000'
    command: npm run start
    networks:
      - backend

  postgres:
    image: postgres:14.3-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=5GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    container_name: AppDataBase
    environment:
      POSTGRES_DB: "app_db"
      POSTGRES_USER: "app_user"
      POSTGRES_PASSWORD: "app_password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    # attach folder with database initializing scripts
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "6543:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - backend

  # http://localhost:5006/
  pgadmin:
    container_name: AppPgAdmin
    image: dpage/pgadmin4:6.9
    environment:
      PGADMIN_DEFAULT_EMAIL: "alexkalinin.ru@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "adminsecretmegapassword_111"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5006:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - backend

  # http://localhost:9187/metrics
#  postgres_exporter:
#    container_name: exporter_container
#    image: prometheuscommunity/postgres-exporter:v0.10.1
#    environment:
#      DATA_SOURCE_URI: "postgres:5432/auth?sslmode=disable"
#      DATA_SOURCE_USER: "auth"
#      DATA_SOURCE_PASS: "supersecretmegapassword_111"
#      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
#    volumes:
#      - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
#    ports:
#      - "9187:9187"
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: 500M
#    networks:
#      - backend

networks:
  backend:
    driver: bridge
